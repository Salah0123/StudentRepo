// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Student.Infrastructure.Persistence;

#nullable disable

namespace Student.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241120041652_addNationalityColToFamilyMembersTable")]
    partial class addNationalityColToFamilyMembersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Student.Domain.Entities.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int>("RelationshipId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.HasIndex("RelationshipId");

                    b.HasIndex("StudentId");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("Student.Domain.Entities.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Egyptian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "American"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canadian"
                        },
                        new
                        {
                            Id = 4,
                            Name = "British"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Australian"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Indian"
                        },
                        new
                        {
                            Id = 7,
                            Name = "German"
                        },
                        new
                        {
                            Id = 8,
                            Name = "French"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Brazilian"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Mexican"
                        },
                        new
                        {
                            Id = 16,
                            Name = "South African"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Nigerian"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Saudi Arabian"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Pakistani"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Turkish"
                        });
                });

            modelBuilder.Entity("Student.Domain.Entities.Relationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Relationships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Parent"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sibling"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spouse"
                        });
                });

            modelBuilder.Entity("Student.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Student.Domain.Entities.FamilyMember", b =>
                {
                    b.HasOne("Student.Domain.Entities.Nationality", "Nationality")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Student.Domain.Entities.Relationship", "Relationship")
                        .WithMany()
                        .HasForeignKey("RelationshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student.Domain.Entities.Student", "Student")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nationality");

                    b.Navigation("Relationship");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student.Domain.Entities.Student", b =>
                {
                    b.HasOne("Student.Domain.Entities.Nationality", "Nationality")
                        .WithMany("Students")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("Student.Domain.Entities.Nationality", b =>
                {
                    b.Navigation("FamilyMembers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Student.Domain.Entities.Student", b =>
                {
                    b.Navigation("FamilyMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
